# Generated by Django 4.1.3 on 2023-01-29 18:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CountryHouseWithWaterAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_v_used_per_hour', models.FloatField(choices=[(1.0, '1 - 2 человека (до 1,3 куб.м./ч)'), (1.3, ' 3 - 4 человека (до 2-х куб.м./ч)')])),
                ('water_hardness', models.IntegerField(choices=[(0, 'до 3'), (3, 'до 7'), (7, 'от 7')])),
                ('water_ferum', models.FloatField(choices=[(0, 'до 0,3'), (0.3, 'до 0,9'), (0.9, 'от 0,9')])),
                ('water_mpc', models.BooleanField()),
                ('water_smell', models.BooleanField()),
            ],
            options={
                'unique_together': {('water_v_used_per_hour', 'water_hardness', 'water_ferum', 'water_mpc', 'water_smell')},
            },
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('type_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('type_discount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='FlatHouseWithWaterAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_hardness', models.IntegerField(choices=[(0, 'до 3'), (3, 'до 7'), (7, 'от 7')])),
                ('water_ferum', models.FloatField(choices=[(0, 'до 0,6'), (0.6, 'до 0,9'), (0.9, 'от 0,9')])),
                ('water_mpc', models.BooleanField()),
            ],
            options={
                'unique_together': {('water_hardness', 'water_ferum', 'water_mpc')},
            },
        ),
        migrations.CreateModel(
            name='FlatHouseWithoutWaterAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_harness', models.BooleanField()),
                ('water_ferum', models.BooleanField()),
            ],
            options={
                'unique_together': {('water_harness', 'water_ferum')},
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_name', models.CharField(max_length=40)),
                ('equipment_price', models.FloatField()),
                ('equipment_id', models.CharField(max_length=7)),
                ('equipment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.equipmenttype')),
            ],
        ),
        migrations.CreateModel(
            name='CoutryHouseAnalysisEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.equipment')),
                ('input_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.countryhousewithwateranalysis')),
            ],
        ),
        migrations.CreateModel(
            name='CountryHouseWithoutWaterAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_v_used_per_hour', models.FloatField(choices=[(1.0, '1 - 2 человека (до 1,3 куб.м./ч)'), (1.3, ' 3 - 4 человека (до 2-х куб.м./ч)')])),
                ('water_hardness', models.BooleanField()),
                ('water_ferum', models.BooleanField()),
                ('water_smell', models.BooleanField()),
            ],
            options={
                'unique_together': {('water_v_used_per_hour', 'water_hardness', 'water_ferum', 'water_smell')},
            },
        ),
        migrations.CreateModel(
            name='CountryHouseNoAnalysisEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.equipment')),
                ('input_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.countryhousewithoutwateranalysis')),
            ],
        ),
        migrations.CreateModel(
            name='BaseHouseWithWaterAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_v_used_per_hour', models.FloatField(choices=[(1.0, '1 - 2 человека (до 1,3 куб.м./ч)'), (1.3, ' 3 - 4 человека (до 2-х куб.м./ч)'), (2.0, '5 - 8 человек (до 2,5-х куб.м./ч)'), (2.5, '8 и более человек(от 2,5 - х куб.м./ч)')])),
                ('water_hardness', models.IntegerField(choices=[(0, 'до 3'), (3, 'до 8'), (8, 'до 15'), (20, 'от 15')])),
                ('water_ferum', models.FloatField(choices=[(0, 'до 0,3'), (0.3, 'до 0,9'), (0.9, 'до 8'), (8, 'от 8')])),
                ('water_mpc', models.BooleanField()),
                ('water_smell', models.BooleanField()),
            ],
            options={
                'unique_together': {('water_v_used_per_hour', 'water_hardness', 'water_ferum', 'water_mpc', 'water_smell')},
            },
        ),
        migrations.CreateModel(
            name='BaseHouseWithoutWaterAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_v_used_per_hour', models.FloatField(choices=[(1.0, '1 - 2 человека (до 1,3 куб.м./ч)'), (1.3, ' 3 - 4 человека (до 2-х куб.м./ч)'), (2.0, '5 - 8 человек (до 2,5-х куб.м./ч)'), (2.5, '8 и более человек(от 2,5 - х куб.м./ч)')])),
                ('water_hardness', models.BooleanField()),
                ('water_ferum', models.BooleanField()),
                ('water_smell', models.BooleanField()),
            ],
            options={
                'unique_together': {('water_v_used_per_hour', 'water_hardness', 'water_ferum', 'water_smell')},
            },
        ),
        migrations.CreateModel(
            name='BaseHouseNoAnalysisEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.equipment')),
                ('input_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.basehousewithoutwateranalysis')),
            ],
        ),
        migrations.CreateModel(
            name='BaseHouseAnalysisEquimpent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.equipment')),
                ('input_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.basehousewithwateranalysis')),
            ],
        ),
        migrations.CreateModel(
            name='FlatHouseNoAnalysisEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.equipment')),
                ('inout_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.flathousewithoutwateranalysis')),
            ],
            options={
                'unique_together': {('inout_data', 'equipment')},
            },
        ),
        migrations.CreateModel(
            name='FlatHouseAnalysisEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.equipment')),
                ('input_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc_app.flathousewithwateranalysis')),
            ],
            options={
                'unique_together': {('input_data', 'equipment')},
            },
        ),
        migrations.AddConstraint(
            model_name='equipment',
            constraint=models.CheckConstraint(check=models.Q(('equipment_id__length__gte', 7)), name='equipment_id_like'),
        ),
        migrations.AddConstraint(
            model_name='equipment',
            constraint=models.CheckConstraint(check=models.Q(('equipment_price__gte', 0)), name='price_gte_zero'),
        ),
        migrations.AlterUniqueTogether(
            name='coutryhouseanalysisequipment',
            unique_together={('input_data', 'equipment')},
        ),
        migrations.AlterUniqueTogether(
            name='countryhousenoanalysisequipment',
            unique_together={('input_data', 'equipment')},
        ),
        migrations.AlterUniqueTogether(
            name='basehousenoanalysisequipment',
            unique_together={('input_data', 'equipment')},
        ),
        migrations.AlterUniqueTogether(
            name='basehouseanalysisequimpent',
            unique_together={('input_data', 'equipment')},
        ),
    ]
